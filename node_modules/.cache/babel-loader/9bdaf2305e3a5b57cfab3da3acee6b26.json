{"ast":null,"code":"import _defineProperty from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/edgar/js/color_project/src/PaletteFormNav.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ColorPickerForm from './ColorPickerForm';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Button from \"@material-ui/core/Button\";\nimport DraggableColorList from './DraggableColorList';\nimport { arrayMove } from 'react-sortable-hoc';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/core/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PaletteMetaForm from './PaletteMetaForm';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport styles from './styles/PaletteFormNavStyles';\n\nvar PaletteFormNav = /*#__PURE__*/function (_Component) {\n  _inherits(PaletteFormNav, _Component);\n\n  var _super = _createSuper(PaletteFormNav);\n\n  function PaletteFormNav(props) {\n    var _this;\n\n    _classCallCheck(this, PaletteFormNav);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      newPaletteName: '',\n      formShowing: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.showForm = _this.showForm.bind(_assertThisInitialized(_this));\n    _this.hideForm = _this.hideForm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PaletteFormNav, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"showForm\",\n    value: function showForm() {\n      this.setState({\n        formShowing: true\n      });\n    }\n  }, {\n    key: \"hideForm\",\n    value: function hideForm() {\n      this.setState({\n        formShowing: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          open = _this$props.open,\n          palettes = _this$props.palettes,\n          handleSubmit = _this$props.handleSubmit;\n      var _this$state = this.state,\n          formShowing = _this$state.formShowing,\n          newPa = _this$state.newPa;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(AppBar, {\n        color: \"default\",\n        position: \"fixed\",\n        className: classNames(classes.appBar, _defineProperty({}, classes.appBarShift, open)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.props.handleDrawerOpen,\n        edge: \"start\",\n        className: classNames(classes.menuButton, _defineProperty({}, classes.hide, open)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"Create a Palette\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.navBtns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \"Go Back\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.showForm,\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Save\"))), formShowing && /*#__PURE__*/React.createElement(PaletteMetaForm, {\n        palettes: palettes,\n        handleSubmit: handleSubmit,\n        hideForm: this.hideForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return PaletteFormNav;\n}(Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PaletteFormNav);","map":{"version":3,"sources":["/home/edgar/js/color_project/src/PaletteFormNav.js"],"names":["React","Component","Link","classNames","withStyles","Drawer","ColorPickerForm","Typography","Divider","IconButton","ChevronRightIcon","Button","DraggableColorList","arrayMove","AppBar","Toolbar","MenuIcon","CssBaseline","PaletteMetaForm","ValidatorForm","TextValidator","styles","PaletteFormNav","props","state","newPaletteName","formShowing","handleChange","bind","showForm","hideForm","evt","setState","target","name","value","classes","open","palettes","handleSubmit","newPa","root","appBar","appBarShift","handleDrawerOpen","menuButton","hide","navBtns","textDecoration","button","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ColorPickerForm from './ColorPickerForm';\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Button from \"@material-ui/core/Button\";\nimport DraggableColorList from './DraggableColorList';\nimport {arrayMove} from 'react-sortable-hoc';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/core/Menu';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PaletteMetaForm from './PaletteMetaForm';\nimport {ValidatorForm,TextValidator} from 'react-material-ui-form-validator';\nimport styles from './styles/PaletteFormNavStyles';\n\n\nclass PaletteFormNav  extends Component {\n  constructor(props){\n    super(props);\n    this.state = {newPaletteName: '',formShowing: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name] : evt.target.value\n    });\n  }\n\n  showForm(){\n    this.setState({formShowing: true})\n  }\n\n  hideForm(){\n    this.setState({formShowing: false})\n  }\n\n\n\n  render(){\n\n    const {classes,open,palettes,handleSubmit} = this.props;\n    const {formShowing, newPa} = this.state;\n\n    return(\n      <div className={classes.root}>\n      <CssBaseline />\n        <AppBar\n          color=\"default\"\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.props.handleDrawerOpen}\n              edge=\"start\"\n              className={classNames(classes.menuButton, {[classes.hide] : open})}\n            >\n              <ChevronRightIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Create a Palette\n            </Typography>\n          </Toolbar>\n          <div className={classes.navBtns}>\n             <Link to='/' style={{textDecoration: 'none'}}>\n                <Button variant='contained' color='secondary' className={classes.button}>\n                  Go Back\n                </Button>\n            </Link>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.showForm} className={classes.button} >\n               Save\n            </Button>\n          </div>\n        </AppBar>\n        {formShowing && (\n          <PaletteMetaForm palettes={palettes} handleSubmit={handleSubmit} hideForm={this.hideForm} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles,{withTheme: true})(PaletteFormNav);"]},"metadata":{},"sourceType":"module"}