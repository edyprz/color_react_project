{"ast":null,"code":"import _classCallCheck from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/edgar/js/color_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/edgar/js/color_project/src/Navbar.js\";\nimport React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport { withStyles } from '@material-ui/styles';\nimport styles from './styles/NavbarStyles';\n\nvar Navbar = /*#__PURE__*/function (_Component) {\n  _inherits(Navbar, _Component);\n\n  var _super = _createSuper(Navbar);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      format: \"hex\",\n      open: false\n    };\n    _this.handleFormatChange = _this.handleFormatChange.bind(_assertThisInitialized(_this));\n    _this.closeSnackbar = _this.closeSnackbar.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Navbar, [{\n    key: \"handleFormatChange\",\n    value: function handleFormatChange(e) {\n      this.setState({\n        format: e.target.value,\n        open: true\n      });\n      this.props.handleChange(e.target.value);\n    }\n  }, {\n    key: \"closeSnackbar\",\n    value: function closeSnackbar() {\n      this.setState({\n        open: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          level = _this$props.level,\n          changeLevel = _this$props.changeLevel,\n          showingAllColors = _this$props.showingAllColors,\n          classes = _this$props.classes;\n      var format = this.state.format;\n      return /*#__PURE__*/React.createElement(\"header\", {\n        className: classes.Navbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"reactcolorpicker\")), showingAllColors && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, \"Level: \", level), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.slider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Slider, {\n        defaultValue: level,\n        min: 100,\n        max: 900,\n        onAfterChange: changeLevel,\n        step: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.selectContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        value: format,\n        onChange: this.handleFormatChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"hex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"HEX - #ffffffff\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"rgb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, \"RGB - rgb(255,255,255)\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"rgba\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, \"RGBA - rgba(255,255,255,1.0)\"))), /*#__PURE__*/React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 3000,\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          id: \"message-id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        }, \"Format Changed to \", format.toUpperCase(), \" !!\"),\n        ContentProps: {\n          'aria-descibedby': 'message-id'\n        },\n        onClose: this.closeSnackbar,\n        action: [/*#__PURE__*/React.createElement(IconButton, {\n          onClick: this.closeSnackbar,\n          color: \"inherit\",\n          key: \"close\",\n          \"aria-label\": \"close\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(CloseIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }\n        }))],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/home/edgar/js/color_project/src/Navbar.js"],"names":["React","Component","Link","Select","MenuItem","Snackbar","CloseIcon","IconButton","Slider","withStyles","styles","Navbar","props","state","format","open","handleFormatChange","bind","closeSnackbar","e","setState","target","value","handleChange","level","changeLevel","showingAllColors","classes","logo","slider","selectContainer","vertical","horizontal","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {Link} from 'react-router-dom'; \nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport {withStyles} from '@material-ui/styles';\nimport styles from './styles/NavbarStyles';\n\nclass Navbar extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {format: \"hex\", open: false};\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n  handleFormatChange(e){\n    this.setState({format: e.target.value, open: true});\n    this.props.handleChange(e.target.value);\n  }\n  closeSnackbar(){\n    this.setState({open:false});\n  }\n\n  render() {\n    const { level, changeLevel,showingAllColors,classes} = this.props;\n    const {format} = this.state;\n\n    return (\n      <header className={classes.Navbar}>\n        <div className={classes.logo}>\n          <Link to='/' >reactcolorpicker</Link>\n        </div>\n\n      {showingAllColors && (\n        <div>\n        <span>Level: {level}</span>\n        <div className={classes.slider}>\n          <Slider\n            defaultValue={level}\n            min={100}\n            max={900}\n            onAfterChange={changeLevel}\n            step={100}\n          />\n        </div>\n      </div>\n      )}\n        <div className={classes.selectContainer}>\n          <Select value={format} onChange={this.handleFormatChange} >\n            <MenuItem value=\"hex\">HEX - #ffffffff</MenuItem>\n            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n            <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\n          </Select>\n        </div>\n        <Snackbar\n        anchorOrigin={{vertical: 'bottom', horizontal:'left'}}\n        open={this.state.open}\n        autoHideDuration={3000}\n        message={\n        <span id='message-id' >\n          Format Changed to {format.toUpperCase()} !!\n        </span>}\n        ContentProps={{\n          'aria-descibedby': 'message-id'\n        }}\n        onClose={this.closeSnackbar}\n        action={[\n          <IconButton \n          onClick={this.closeSnackbar} \n          color='inherit'\n          key='close'\n          aria-label='close'\n          >\n            <CloseIcon/>\n          </IconButton>\n        ]}\n        />\n      </header>\n    );\n  }\n}\n\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}